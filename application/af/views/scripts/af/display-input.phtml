<?php
/**
 * @author  matthieu.napoli
 * @package AF
 */
/** @var $af AF_Model_AF */
$af = $this->af;
/** @var $form UI_Form */
$form = $this->form;
/** @var $inputSet AF_Model_InputSet_Primary|null */
$inputSet = $this->inputSet;
if ($inputSet) {
    $inputSetId = $inputSet->getId();
    $isFinished = $inputSet->isFinished();
    $isInputComplete = $inputSet->isInputComplete();
} else {
    $inputSetId = null;
    $isFinished = false;
    $isInputComplete = false;
}
?>

<div class="inputProgress row-fluid">

    <div class="progress span6">
        <div class="bar"></div>
    </div>

    <div class="span3">
        <img class="completionIcon" src="">
        <span class="completionMessage"></span>
    </div>

    <div class="span3">
        <?php if ($this->mode != AF_ViewConfiguration::MODE_READ) : ?>
            <form class="form-inline">
                <label class="checkbox" data-placement="bottom">
                    <input type="checkbox" id="markInputAsFinished">
                    <?=__('AF', 'inputInput', 'markInputAsFinished')?>
                </label>
            </form>
        <?php endif; ?>
    </div>

</div>

<?php
if ($this->mode != AF_ViewConfiguration::MODE_READ) {
    $loadingText = __('UI', 'loading', 'loading');
    // Boutons
    $actionGroup = new UI_Form_Element_HTML('formActionGroup');
    $saveButtonLabel = __('UI', 'verb', 'save');
    $resetButtonLabel = __('UI', 'verb', 'reset');
    $resultsPreviewButtonLabel = __('AF', 'inputInput', 'resultsPreview');
    $quitButtonLabel = __('UI', 'verb', 'quit');
    $actionGroup->content = <<<HTML
        <button type="button" class="inputSave btn btn-primary" data-loading-text="$loadingText" disabled>
            $saveButtonLabel
        </button>
        <button type="button" class="inputReset btn" disabled>
            $resetButtonLabel
        </button>
        <button type="button" class="inputPreview btn" data-loading-text="$loadingText">
            $resultsPreviewButtonLabel
        </button>
        <button type="button" class="inputExit btn">
            $quitButtonLabel
        </button>
HTML;
    $form->addActionElement($actionGroup);
} else {
    // Boutons
    $actionGroup = new UI_Form_Element_HTML('formActionGroup');
    $quitButtonLabel = __('UI', 'verb', 'quit');
    $actionGroup->content = <<<HTML
        <button type="button" class="inputExit btn">
            $quitButtonLabel
        </button>
HTML;
    $form->addActionElement($actionGroup);
}

echo $form->render();
?>

<div class="resultsPreview hide">
    <div class="alert alert-info">
        <?=__('AF', 'inputInput', 'resultsPreview')?>
    </div>
    <div class="resultsPreviewContent">
    </div>
</div>


<script>

    var afId = <?=$af->getId()?>;
    var inputSetId = <?= $inputSetId ?: "null" ?>;
    var exitURL = "<?=$this->exitURL?>";
    var urlParams = <?=json_encode($this->urlParams)?>;
    // Saisie en cours
    var input = new AF.Input(afId, "<?=$af->getRef()?>", "<?=$this->mode?>", inputSetId, exitURL, urlParams);

    // Traductions
    // Statut avancement saisie
    <?=Core_Translate::exportJS('AF', 'inputInput', 'statusInProgress')?>
    <?=Core_Translate::exportJS('AF', 'inputInput', 'statusInputIncomplete')?>
    <?=Core_Translate::exportJS('AF', 'inputInput', 'statusCalculationIncomplete')?>
    <?=Core_Translate::exportJS('AF', 'inputInput', 'statusComplete')?>
    <?=Core_Translate::exportJS('AF', 'inputInput', 'statusFinished')?>
    // Marquer la saisie comme terminée
    <?=Core_Translate::exportJS('AF', 'inputInput', 'markInProgressInputAsFinishedTooltip')?>
    <?=Core_Translate::exportJS('AF', 'inputInput', 'markIncompleteInputAsFinishedTooltip')?>
    // Popups de confirmation au clic sur « Réinitialiser » ou « Quitter »
    <?=Core_Translate::exportJS('AF', 'inputInput', 'confirmReinitializeInput')?>
    <?=Core_Translate::exportJS('AF', 'inputInput', 'confirmExitInput')?>
    <?=Core_Translate::exportJS('UI', 'verb', 'cancel')?>
    <?=Core_Translate::exportJS('UI', 'verb', 'confirm')?>
    // Historique de la saisie
    <?=Core_Translate::exportJS('UI', 'history', 'valueHistory')?>

    $(function() {

        <?php
        if ($inputSet) {
            $completion = $inputSet->getCompletion();
            $status = $inputSet->getStatus();
        } else {
            // Par convention, si pas de saisie enregistrée : 0%
            $completion = 0;
            $status = 'input_incomplete';
        }
        ?>
        var status = AF.InputProgress.getStatusByRef("<?=$status?>");

        // Complétion et statut initial
        input.inputProgress.setCompletion(<?=$completion?>);
        input.inputProgress.setStatus(status);

    });

</script>
