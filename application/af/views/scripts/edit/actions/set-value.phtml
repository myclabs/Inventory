<?php
/**
 * @author  matthieu.napoli
 * @package AF
 */
/** @var $af AF_Model_AF */
$af = $this->af;

// Creation du datagrid
$actionsDatagrid = new UI_Datagrid('actionsSetValue', 'datagrid_edit_actions_set-value', 'af');
$actionsDatagrid->initialLoading = false;
$actionsDatagrid->addParam('id', $af->getId());
$actionsDatagrid->pagination = false;
$actionsDatagrid->addElements = true;
$actionsDatagrid->addPanelTitle = __('AF', 'configInteractionDatagrid', 'valueAssignmentActionAddPanelTitle');
$actionsDatagrid->deleteElements = true;

// Element de formulaire cible de l'action
$targetComponentColumn = new UI_Datagrid_Col_List('targetComponent',
                                                  __('AF', 'configInteractionDatagrid', 'targetComponentHeader'));
$targetComponentColumn->withEmptyElement = false;
$targetComponentColumn->editable = false;
$list = [];
foreach ($this->componentList as $component) {
    if ($component instanceof AF_Model_Component_Numeric
        || $component instanceof AF_Model_Component_Select_Single
        || $component instanceof AF_Model_Component_Checkbox
    ) {
        /** @var $component AF_Model_Component */
        $list[$component->getId()] = $component->getLabel();
    }
}
$targetComponentColumn->list = $list;
$actionsDatagrid->addCol($targetComponentColumn);

// Type de valeur Ã  assigner
$typeColumn = new UI_Datagrid_Col_List('type', __('AF', 'configInteractionDatagrid', 'methodOfDeterminingHeader'));
$typeColumn->withEmptyElement = false;
$typeColumn->editable = false;
$typeColumn->list = [
    'setValue'     => __('AF', 'configInteractionDatagrid', 'fixedValueOption'),
//    'setAlgoValue' => __('Algo', 'name', 'algorithm'),
    ];
$actionsDatagrid->addCol($typeColumn);

// Valeur ou algorithme Ã  assigner
$valueColumn = new UI_Datagrid_Col_Text('value', __('UI', 'name', 'value'));
$valueColumn->addable = false;
$valueColumn->editable = false;
$actionsDatagrid->addCol($valueColumn);

// Condition dÃ©clenchant l'action
$conditionColumn = new UI_Datagrid_Col_List('condition',
                                            __('UI', 'name', 'condition'));
$conditionColumn->editable = true;
$conditionColumn->withEmptyElement = true;
$list = [];
foreach ($this->conditionList as $condition) {
    /** @var $condition AF_Model_Condition */
    $list[$condition->getId()] = $condition->getRef();
}
$conditionColumn->list = $list;
$actionsDatagrid->addCol($conditionColumn);

$editValueColumn = new UI_Datagrid_Col_Popup('editValue', __('UI', 'name', 'edition'));
$editValueColumn->popup->title = __('AF', 'configInteractionDatagrid', 'valueAssignmentActionEditPanelTitle');
$editValueColumn->popup->source = '';
$editValueColumn->popup->addAttribute('class', 'large');
$actionsDatagrid->addCol($editValueColumn);

echo $actionsDatagrid->render();
