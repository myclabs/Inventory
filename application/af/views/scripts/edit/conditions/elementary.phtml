<?php
/**
 * @author  matthieu.napoli
 * @package AF
 */
/** @var $af AF_Model_AF */
$af = $this->af;

$datagrid = new UI_Datagrid('conditionsElementary', 'datagrid_edit_conditions_elementary', 'af');
$datagrid->initialLoading = false;
$datagrid->addParam('id', $af->getId());
$datagrid->pagination = false;
$datagrid->addElements = true;
$datagrid->addPanelTitle = __('AF', 'configInteractionDatagrid', 'elementaryConditionAddPanelTitle');
$datagrid->deleteElements = true;

// Identifiant
$refColumn = new UI_Datagrid_Col_Text('ref', __('UI', 'name', 'identifier'));
$refColumn->editable = true;
$datagrid->addCol($refColumn);

// Field
$fieldColumn = new UI_Datagrid_Col_List('field', __('UI', 'name', 'field'));
$fieldColumn->editable = false;
$fieldColumn->withEmptyElement = true;
$list = [];
foreach ($this->componentList as $component) {
    if ($component instanceof AF_Model_Component_Field
        && !$component instanceof AF_Model_Component_Text
    ) {
        $list[$component->getId()] = $component->getLabel();
    }
}
$fieldColumn->list = $list;
$datagrid->addCol($fieldColumn);

// Relation
$relationColumn = new UI_Datagrid_Col_List('relation', __('UI', 'name', 'relation'));
$relationColumn->addable = false;
$relationColumn->list = [
    AF_Model_Condition_Elementary::RELATION_EQUAL     => __('AF', 'configInteractionDatagrid', 'equalOption'),
    AF_Model_Condition_Elementary::RELATION_NEQUAL    => __('AF', 'configInteractionDatagrid', 'differentOption'),
    AF_Model_Condition_Elementary::RELATION_GT        => __('AF', 'configInteractionDatagrid', 'greaterOption'),
    AF_Model_Condition_Elementary::RELATION_LT        => __('AF', 'configInteractionDatagrid', 'lowerOption'),
    AF_Model_Condition_Elementary::RELATION_GE        => __('AF', 'configInteractionDatagrid', 'greaterOrEqualOption'),
    AF_Model_Condition_Elementary::RELATION_LE        => __('AF', 'configInteractionDatagrid', 'lowerOrEqualOption'),
    AF_Model_Condition_Elementary::RELATION_CONTAINS  => __('AF', 'configInteractionDatagrid', 'containsOption'),
    AF_Model_Condition_Elementary::RELATION_NCONTAINS => __('AF', 'configInteractionDatagrid', 'doesNotContainOption')
];
$datagrid->addCol($relationColumn);

// Valeur de référence
$valueColumn = new UI_Datagrid_Col_Text('value', __('UI', 'name', 'referenceValue'));
$valueColumn->addable = false;
$datagrid->addCol($valueColumn);

// Popup d'udpdate de la valeur de référence de la condition
$editValueColumn = new UI_Datagrid_Col_Popup('editValue', __('UI', 'name', 'edition'));
$editValueColumn->popup->title = __('AF', 'configInteractionDatagrid', 'elementaryConditionEditPanelTitle');
$editValueColumn->popup->addAttribute('class', 'large');
$editValueColumn->popup->footer = (string) $this->button(
    __('UI', 'verb', 'save'),
    'ok icon-white',
    [
         'class'   => 'btn-primary',
         'onclick' => '$(\'#updateCondition\').submit();',
    ]
);
$closeButton = '<button type="button" class="btn" data-dismiss="modal">' .
    '<i class="icon-remove"></i> ' . __('UI', 'verb', 'cancel') .
    '</button>';
$editValueColumn->popup->footer .= $closeButton;
$datagrid->addCol($editValueColumn);

echo $datagrid->render();
