<?php
/**
 * @author  matthieu.napoli
 * @package Techno
 */

/** @var $family Techno_Model_Family */
$family = $this->family;
$dimensions = $family->getDimensions();

if (count($dimensions) === 0) {
    echo "<p class='muted'>" . __('', '', 'Aucune donnée à afficher.') . "</p>";
    return;
}

$tmd = new UI_TMD('elements');
if ($this->edit) {
    $tmd->formatCells = '<a href="{url}" data-target="#element_edit" data-remote="false" data-toggle="modal" data-element="{elementId}">{value} ± {uncertainty}</a>';

    $editPopup = new UI_Popup_Ajax('element_edit');
    $editPopup->title = __('UI', 'loading', 'loading');
    $editPopup->addAttribute('class', 'large');
    $editPopup->footer = '<button class="btn btn-warning pull-left" data-toggle="modal" data-target="#element_delete, #element_edit">'
        .'<i class="icon-ok icon-white"></i> '.__('UI', 'verb', 'delete').'</button>';
    $editPopup->footer .= '<button class="btn btn-primary" onclick="$(\'#element_editForm\').submit();">'
        .'<i class="icon-ok icon-white"></i> '.__('UI', 'verb', 'save').'</button>';
    $editPopup->footer .= '<button class="btn" data-dismiss="modal">'
        .'<i class="icon-remove"></i> '.__('UI', 'verb', 'close').'</button>';
    echo $editPopup->render();

    $deletePopup = new UI_Popup_Static('element_delete');
    $deletePopup->title = __('UI', 'deletionConfirmationPopup', 'title');
    $deletePopup->body = __('UI', 'deletionConfirmationPopup', 'text');
    $deletePopup->footer = '<button class="btn btn-primary" onclick="deleteElement($(this).attr(\'data-element\'));">'
        .'<i class="icon-ok icon-white"></i> '.__('UI', 'verb', 'confirm').'</button>';
    $deletePopup->footer .= '<a class="btn" data-toggle="modal" data-remote="false" data-target="#element_edit" onclick="$(\'#element_delete\').modal(\'hide\');">'
        .'<i class="icon-remove"></i> '.__('UI', 'verb', 'cancel').'</a>';
    echo $deletePopup->render();
} else {
    $tmd->formatCells = '{value} ± {uncertainty}';
}

// Ajout des dimensions/colonnes
foreach ($dimensions as $dimension) {
    // Éléments de la dimension
    $values = [];
    foreach ($dimension->getMembers()->toArray() as $member) {
        $values[$member->getRef()] = $member->getLabel();
    }
    // Ajoute la dimension
    if ($dimension->getOrientation() == Techno_Model_Family_Dimension::ORIENTATION_HORIZONTAL) {
        $tmd->addDimensionIndexCol(Core_Tools::ucFirst($dimension->getLabel()),
                                   $values,
                                   $dimension->getPosition());
    } else {
        $tmd->addDimensionIndexLine(Core_Tools::ucFirst($dimension->getLabel()),
                                    $values,
                                    $dimension->getPosition());
    }
}

/**
 * Callback pour remplir les cellules
 * @param array $coordinates array(indexDimension => indexMember)
 * Les coordonnées sont dans l'ordre de la position, les dimensions horizontales en premier
 * @return array|null|string
 */
$tmd->cellValueCallback = function ($coordinates) use ($family, $dimensions) {
    $locale = Core_Locale::loadDefault();
    $members = [];
    $index = 0;
    foreach ($dimensions as $dimension) {
        $members[] = $dimension->getMember(Keyword_Model_Keyword::loadByRef($coordinates[$index]));
        $index++;
    }
    $cell = $family->getCell($members);
    $chosenElement = $cell->getChosenElement();
    if ($chosenElement !== null) {
        /** @var Techno_Model_Element_Coeff|Techno_Model_Element_Process $chosenElement */
        return [
            'url'         => 'techno/element/details/id/' . $chosenElement->getId(),
            'elementId'   => $chosenElement->getId(),
            'value'       => $locale->formatNumber($chosenElement->getValue()->getDigitalValue(), 3),
            'uncertainty' => $locale->formatUncertainty($chosenElement->getValue()->getRelativeUncertainty()),
            'unit'        => $chosenElement->getUnit()->getSymbol(),
        ];
    }
    if ($this->edit) {
        $addButton = new UI_HTML_Button('Ajouter');
        $addButton->icon = 'plus-sign';
        $addButton->addAttribute('class', 'btn-mini');
        $addButton->addAttribute('onclick', 'addElement(\'' . implode('#', $coordinates) . '\')');
        return $addButton->getHTML();
    }
    return null;
};

echo $tmd->render();

?>

<?php if ($this->edit) : ?>

    <script>
        $('#element_delete').on('hidden', function(){
            var modalFooter = $('#element_delete').children('div.modal-footer');
            modalFooter.children('button.btn-primary').removeAttr('data-element');
            modalFooter.children('a.btn').removeAttr('data-element');
            modalFooter.children('a.btn').removeAttr('href');
        });

        addElement = function (coordinates) {
            var url = "<?=$this->baseUrl('techno/tmd_family-elements-tmd/add-element')?>";
            var data = {
                'id': <?=$family->getId()?>,
                'coordinates':coordinates
            };
            $.post(url, data, function (data, textStatus, jqXHR) {
                $('#elements-' + coordinates.replace(/#/g, '-')).html(
                    '<a data-toggle="modal" data-remote="false" data-target="#element_edit" href="techno/element/details/id/'
                        + data.elementId
                    + '" data-element="' + data.elementId + '">'
                    + '0 ± 0 %'
                    + '</a>'
                );
                $('#elements-' + coordinates.replace(/#/g, '-') + ' a').trigger('click');
                $('#element_edit').on('hide', {idElement: data.elementId }, undoAdd);
                $('#element_edit .modal-footer button.btn-warning').addClass('hide');
            });
            return false;
        };

        undoAdd = function (event) {
            deleteElement(event.data.idElement);
            $('#element_edit').unbind('hide', undoAdd);
            $('#element_edit .modal-footer button.btn-warning').removeClass('hide');
        };

        $.fn.elementEditSuccess = function (response) {
            addMessage(response.message, response.type);
            $('#elements tbody tr td a[data-element="' + response.data.elementId + '"]').html(
                response.data.value + ' ± ' + response.data.uncertainty + ' %'
            );
            $('#element_edit').unbind('hide', undoAdd);
            $('#element_edit .modal-footer button.btn-warning').removeClass('hide');
            $('#element_edit').modal('hide');
        };

        deleteElement = function(idElement) {
            var coordinates = $('#elements td a[data-element="' + idElement + '"]').parent().attr('id').substr(9);
            var data = {
                'idElement':idElement,
                'idFamily': <?=$family->getId()?>,
                'coordinates':coordinates
            };
            $.post('techno/tmd_family-elements-tmd/delete-element', data, function (data, textStatus, jqXHR) {
                $('#elements-' + coordinates).html(
                    '<button class="btn btn-mini" type="button" onclick="addElement(\'' + coordinates.replace(/-/g, '#') + '\');">'
                        + '<i class="icon-plus-sign"></i>'
                        + ' <?=__('UI', 'verb', 'add')?>'
                        + '</button>'
                );
                if (data.message != '') {
                    addMessage(data.message, 'success');
                }
            });
            $('#element_delete').modal('hide');
        };
    </script>

<?php endif;
