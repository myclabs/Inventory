<?php
/** @var $library Doc_Model_Library */
$library = $this->library;
/** @var $bibliography Doc_Model_Bibliography */
$bibliography = $this->bibliography;
$documents = $bibliography->getReferencedDocuments();

$datagrid = new UI_Datagrid('bibliography', 'datagrid_bibliography', 'doc');
$datagrid->addParam('id', $bibliography->getId());
$datagrid->deleteElements = true;
$datagrid->deleteElementValue = '<i class="icon-trash"></i> ' . __('Doc', 'bibliography', 'deleteReference');
$datagrid->deletePanelText = __('Doc', 'bibliography', 'deletionPopupInformation');

// Name
$nameColumn = new UI_Datagrid_Col_Text('name', __('UI', 'name', 'name'));
$datagrid->addCol($nameColumn);

// Extension
$extensionColumn = new UI_Datagrid_Col_Text('extension', __('Doc', 'library', 'extension'));
$datagrid->addCol($extensionColumn);

// Description
$descriptionColumn = new UI_Datagrid_Col_LongText('description', __('UI', 'name', 'description'));
$datagrid->addCol($descriptionColumn);

// File size
$fileSizeColumn = new UI_Datagrid_Col_Number('fileSize', __('Doc', 'library', 'fileSize'));
$datagrid->addCol($fileSizeColumn);

// Download file
$downloadColumn = new UI_Datagrid_Col_Link('download', __('Doc', 'verb', 'download'));
$datagrid->addCol($downloadColumn);

echo $datagrid->render();
$datagrid->addHeader();

// Popup d'ajout
$popup = new UI_Popup_Static('bibliography_add');
$popup->addAttribute('class', 'large');
$popup->title = __('Doc', 'bibliography', 'addPanelTitle');
$popup->body = __('Doc', 'bibliography', 'addPanelBody');
$popup->body .= $this->partial('library/view.phtml', 'doc', ['library' => $library]);
$validateButton = new UI_HTML_Button(__('Doc', 'bibliography', 'addNewReference'));
$validateButton->addAttribute('class', 'btn-primary');
$validateButton->addAttribute('class', 'validateNewReference');
$cancelButton = new UI_HTML_Button(__('UI', 'verb', 'cancel'));
$cancelButton->addAttribute('data-dismiss', 'modal');
$popup->footer = $validateButton->render() . ' ' . $cancelButton->render();
echo $popup->render();

// Bouton d'ajout
$addButton = new UI_HTML_Button('<i class="icon-plus-sign"></i> ' . __('UI', 'verb', 'add'));
$addButton->addAttribute('class', 'addDocumentReferenceButton');
echo $addButton->render();
?>

<script>
    $(".addDocumentReferenceButton").click(function() {
        $("#bibliography_add").modal('show');
    });
    // Lors de la soumission du formulaire d'ajout
    $("#bibliography_add").find(".validateNewReference").click(function() {
        // Si le popup n'est pas désactivé par un popup de datagrid de la librairie.
        if ($('#bibliography_add').data('modal').isShown === true) {
            // Récupère les documents sélectionnés dans le datagrid
            var selectedDocuments = library<?=$library->getId()?>.getSelectedLines();
            if (selectedDocuments.length > 0) {
                $.ajax("<?=$this->baseUrl()?>/doc/bibliography/add", {
                    data: {
                        id: <?=$bibliography->getId()?>,
                        documents: selectedDocuments
                    },
                    success: function() {
                        $('#bibliography_add').modal('hide');
                        addMessage('<?=__('UI', 'message', 'added')?>', 'success');
                        // Rafraichit le datagrid
                        bibliography.filter();
                    },
                    error: function(o) {
                        $('#bibliography_add').modal('hide');
                        errorHandler(o);
                        // Rafraichit le datagrid
                        bibliography.filter();
                    }
                });
            } else {
                alert('No line selected.');
            }
        }
    });
    // Empèche la fermeture du popup d'ajout dans la bibliothèque de fermer celle d'ajout dans la bibliographie
    $('#bibliography_add .modal').on('show', function () {
        $('#bibliography_add').data('modal').isShown = false;
        $('#bibliography_add .validateNewReference').attr('class', 'btn btn-inverse disabled validateNewReference');
    });
    $('#bibliography_add .modal').on('hidden', function () {
        $('#bibliography_add').data('modal').isShown = true;
        $('#bibliography_add .validateNewReference').attr('class', 'btn btn-primary validateNewReference');
    });
</script>
